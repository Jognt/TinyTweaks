//////
// Space shuttle external tank:
// Dry:  26,500 kg <-> 35,000 kg
// Wet: 760,000 kg
//////

//////
// Calculate the ratio between fuelmass and tankmass.
// [Wet-dry]/dry -> 760 - 26,5 = 733,500
// Ratio: 733,500 / 26,500 = 0,0361281526925699 kg of tank per kg of fuel
//////

//////
// Rockomax Jumob-64 tank:
// Fuel: 32t (6400*0.005)
// Dry:  4
// Wet: 36
//////

//////
// Calculate the ratio between fuelmass and tankmass for the Rockomax tank:
// [Wet-dry]/dry -> 36 - 4 = 32
// Ratio: 32 / 4 = 8
//
// Big difference.
//////

//////
// Tweaked - Ratio factor 0,04:
// Fuel: 32t
// Dry: 1,28
// Wet: 33,28
//
// If we round up the Space Shuttle's tank-to-fuel ration to 0,04 and use that to calculate the Rockomax's tank mass based on its fuelcontent.
// We get a much lighter tank.
//////

//////
// So we can either add all the fuel for a given tank together, mix with density numbers to get the mass, and multiply that mass by the ratio:
// ((LiquidFuel+Oxidizer) * 0.005) * 0.04
// (XenonGas * 0.0001) * ratio
// (MonoPropellant * 0.004) * ratio
// (Ore * 0.01) * ratio
//
// Or simplify the whole thing by just reducing tank mass by a factor 3? 
// Assuming the Rockomax tank, dividing the stock mass of 4 tonnes by 3 = 1,33. Quite close to the 1,28 if we were to do the ratio math.
// The ratio math would work for *every single stock and modded part* though.. That makes my tummy tingle.
//////

// @PART:HAS[@RESOURCE[LiquidFuel]&@RESOURCE[Oxidizer]&~testMarker[*]]:FOR[tinyTweaks]
// {
// 	testMarker = #$name$ | $title$ | LiquidFuel = $RESOURCE[LiquidFuel]/maxAmount$ | Oxidizer = $RESOURCE[Oxidizer]/maxAmount$ | mass = $mass$	
// 	totalUnits = #$RESOURCE[LiquidFuel]/maxAmount$
// 	@totalUnits += #$RESOURCE[Oxidizer]/maxAmount$
// 	stockMassFactor = #$totalUnits$
// 	reducedMassFactor = #$totalUnits$
// 	@stockMassFactor *= 0.000625
// 	@reducedMassFactor *= 0.0002
// 	massReductionFactor = #$stockMassFactor$
// 	@massReductionFactor -= #$reducedMassFactor$
// 	currentMass = #$mass$
// 	suggestedMass = #$mass$
// 	@suggestedMass -= #$massReductionFactor$
// 	massComparison = # Current: $currentMass$ | Suggested: $suggestedMass$ | Difference: $massReductionFactor$
// }

// @PART:HAS[@RESOURCE[LiquidFuel]&!RESOURCE[Oxidizer]&~testMarker[*]]:FOR[tinyTweaks]
// {
// 	testMarker = #$name$ | $title$ | $RESOURCE[LiquidFuel]/maxAmount$ | mass = $mass$	
// 	totalUnits = #$RESOURCE[LiquidFuel]/maxAmount$
// 	stockMassFactor = #$totalUnits$
// 	reducedMassFactor = #$totalUnits$
// 	@stockMassFactor *= 0.000625
// 	@reducedMassFactor *= 0.0002
// 	massReductionFactor = #$stockMassFactor$
// 	@massReductionFactor -= #$reducedMassFactor$
// 	currentMass = #$mass$
// 	suggestedMass = #$mass$
// 	@suggestedMass -= #$massReductionFactor$
// 	massComparison = # Current: $currentMass$ | Suggested: $suggestedMass$ | Difference: $massReductionFactor$
// }

// @PART:HAS[@RESOURCE[XenonGas]&~testMarker[*]]:FOR[tinyTweaks]
// {
// 	testMarker = #$name$ | $title$ | $RESOURCE[XenonGas]/maxAmount$ | mass = $mass$	
// }

// @PART:HAS[@RESOURCE[Ore]&~testMarker[*]]:FOR[tinyTweaks]
// {
// 	testMarker = #$name$ | $title$ | $RESOURCE[Ore]/maxAmount$ | mass = $mass$	
// }

// @PART:HAS[@RESOURCE[MonoPropellant]&~testMarker[*]&!MODULE[ModuleCommand]]:FOR[tinyTweaks]
// {
// 	testMarker = #$name$ | $title$ | $RESOURCE[MonoPropellant]/maxAmount$ | mass = $mass$
// }